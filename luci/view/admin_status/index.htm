<%#
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

-%>

<%
	require "luci.fs"
	require "luci.tools.status"

	local has_ipv6 = luci.fs.access("/proc/net/ipv6_route")
	local has_dhcp = luci.fs.access("/etc/config/dhcp")
	local has_wifi = luci.fs.stat("/etc/config/wireless")
	      has_wifi = has_wifi and has_wifi.size > 0
	local _, _, memtotal, memcached, membuffers, memfree, _, swaptotal, swapcached, swapfree = luci.sys.sysinfo()
	local has_swap
	if swaptotal > 0 then
		has_swap = 1
	end
	local has_dsl = luci.fs.stat("/etc/init.d/dsl_control")

	if luci.http.formvalue("status") == "1" then
		local ntm = require "luci.model.network".init()
		local wan = ntm:get_wannet()
		local wan6 = ntm:get_wan6net()

		local conn_count = tonumber((
			luci.sys.exec("wc -l /proc/net/nf_conntrack") or
			luci.sys.exec("wc -l /proc/net/ip_conntrack") or
			""):match("%d+")) or 0

		local conn_max = tonumber((
			luci.sys.exec("sysctl net.nf_conntrack_max") or
			luci.sys.exec("sysctl net.ipv4.netfilter.ip_conntrack_max") or
			""):match("%d+")) or 4096

		local rv = {
			uptime     = luci.sys.uptime(),
			localtime  = os.date(),
			loadavg    = { luci.sys.loadavg() },
			memtotal   = memtotal,
			memcached  = memcached,
			membuffers = membuffers,
			memfree    = memfree,
			swaptotal  = swaptotal,
			swapcached = swapcached,
			swapfree   = swapfree,
			connmax    = conn_max,
			conncount  = conn_count,
			leases     = luci.tools.status.dhcp_leases(),
			leases6    = luci.tools.status.dhcp6_leases(),
			wifinets   = luci.tools.status.wifi_networks()
		}

		if wan then
			rv.wan = {
				ipaddr  = wan:ipaddr(),
				gwaddr  = wan:gwaddr(),
				netmask = wan:netmask(),
				dns     = wan:dnsaddrs(),
				expires = wan:expires(),
				uptime  = wan:uptime(),
				proto   = wan:proto(),
				ifname  = wan:ifname(),
				link    = wan:adminlink()
			}
		end

		if wan6 then
			rv.wan6 = {
				ip6addr = wan6:ip6addr(),
				gw6addr = wan6:gw6addr(),
				dns     = wan6:dns6addrs(),
				uptime  = wan6:uptime(),
				ifname  = wan6:ifname(),
				link    = wan6:adminlink()
			}
		end

		if has_dsl then
			local dsl_stat = luci.sys.exec("/etc/init.d/dsl_control lucistat")
			local dsl_func = loadstring(dsl_stat)
			rv.dsl = dsl_func()
		end

		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)

		return
	end

	local system, model = luci.sys.sysinfo()
-%>

<%+header%>
<div class="container haier2_wrap">
    <div class="haier2_header">
        <img src="/luci-static/images/haier2_logo.png" alt="logo"/>
    </div>
    <div class="haier2_main">
	<p><span>&#x7F51;&#x7EDC;&#x8BBE;&#x7F6E;</span></p>
        <div class="border_buttom"></div>
        <ul class="haier4_list">
            <li class="active"><a href="#">&#x5BBD;&#x5E26;&#x62E8;&#x53F7;</a></li>
            <li><a href="#">&#x9759;&#x6001;IP</a></li>
            <li><a href="#">&#x52A8;&#x6001;IP</a></li>
            <li><a href="#">&#x65E0;&#x7EBF;&#x4E2D;&#x7EE7;</a></li>
                    <div style="clear: both;"></div>
        </ul>

        <form action="">
            <p class="form_p">*&#x8BF7;&#x8F93;&#x5165;&#x8FD0;&#x8425;&#x5546;&#x7ED9;&#x60A8;&#x7684;&#x5BBD;&#x5E26;&#x4E0A;&#x7F51;&#x8D26;&#x53F7;&#x53CA;&#x5BC6;&#x7801;,&#x5982;&#x6709;&#x9057;&#x5FD8;,&#x53EF;&#x62E8;&#x6253;&#x8FD0;&#x8425;&#x5546;&#x7535;&#x8BDD;&#x627E;&#x56DE;&#x3002;</p>
            <div class="haier3_input_group">
                <input type="text" onchange="cbi_d_update(this.id)" name="cbid.network.wan.username" id="cbid.network.wan.username" value="" placeholder="&#x8BF7;&#x8F93;&#x5165;&#x5BBD;&#x5E26;&#x8D26;&#x53F7;" />
                <input type="password" onchange="cbi_d_update(this.id)" name="cbid.network.wan.password" id="cbid.network.wan.password" value="" placeholder="&#x8BF7;&#x8F93;&#x5165;&#x5BBD;&#x5E26;&#x5BC6;&#x7801;" />
            </div>
            <p class="form_p">*&#x8BF7;&#x8BBE;&#x7F6E;&#x60A8;&#x7684;&#x65E0;&#x7EBF;&#x7F51;&#x7EDC;&#x4FE1;&#x606F;&#x3002;&#x6CE8;&#x610F;:&#x4E3A;&#x9632;&#x6B62;&#x65E0;&#x7EBF;&#x7F51;&#x7EDC;&#x88AB;&#x4ED6;&#x4EBA;&#x76D7;&#x7528;,&#x8BF7;&#x8BBE;&#x7F6E;&#x590D;&#x6742;&#x7684;&#x65E0;&#x7EBF;&#x5BC6;&#x7801;&#x3002;</p>
            <div class="haier3_input_group">
                <input type="text" placeholder="&#x8BF7;&#x8F93;&#x5165;&#x65E0;&#x7EBF;&#x8D26;&#x53F7;" />
                <input type="text" placeholder="&#x8BF7;&#x8F93;&#x5165;&#x65E0;&#x7EBF;&#x5BC6;&#x7801;" />
            </div>
            <p class="haier4_form_p form_p"><span>&#x8BE6;&#x7EC6;&#x914D;&#x7F6E;</span></p><div style="clear: both;"></div>
            <div class="submit_round">
                <input class="submit_round_main" type="submit" value="&#x786E;&#x8BA4;" />
            </div>
        </form>
    </div>
</div>
<%+footer%>
